/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Describes the end of a route assigned to the vehicle.
 * @export
 * @interface VehicleEnd
 */
export interface VehicleEnd {
    /**
     * The unique identifier of the location where a route assigned to the vehicle must end.
     * @type {string}
     * @memberof VehicleEnd
     */
    locationId: string;
    /**
     * The latest point in time a route assigned to the vehicle may end. This must not be earlier than the vehicle's earliest start time. When used in conjunction with a latest start time, the latest end time must not be earlier than the latest start time.  Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6) and not before `1970-01-01T00:00:00+00:00`. The date must provide an offset to UTC.
     * @type {Date}
     * @memberof VehicleEnd
     */
    latestEndTime: Date;
    /**
     * Describes how long [s] it takes for the vehicle to wrap up at its end location before the route ends.
     * @type {number}
     * @memberof VehicleEnd
     */
    duration?: number;
}

export function VehicleEndFromJSON(json: any): VehicleEnd {
    return VehicleEndFromJSONTyped(json, false);
}

export function VehicleEndFromJSONTyped(json: any, ignoreDiscriminator: boolean): VehicleEnd {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'locationId': json['locationId'],
        'latestEndTime': (new Date(json['latestEndTime'])),
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
    };
}

export function VehicleEndToJSON(value?: VehicleEnd | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'locationId': value.locationId,
        'latestEndTime': (value.latestEndTime.toISOString()),
        'duration': value.duration,
    };
}

