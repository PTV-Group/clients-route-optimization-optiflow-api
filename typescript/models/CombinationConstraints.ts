/* tslint:disable */
/* eslint-disable */
/**
 * OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DepotVehicleCombinationConstraint,
    DepotVehicleCombinationConstraintFromJSON,
    DepotVehicleCombinationConstraintFromJSONTyped,
    DepotVehicleCombinationConstraintToJSON,
} from './DepotVehicleCombinationConstraint';
import {
    OrderVehicleCombinationConstraint,
    OrderVehicleCombinationConstraintFromJSON,
    OrderVehicleCombinationConstraintFromJSONTyped,
    OrderVehicleCombinationConstraintToJSON,
} from './OrderVehicleCombinationConstraint';

/**
 * Describes constraints on combinations of orders, vehicles and depots.
 * @export
 * @interface CombinationConstraints
 */
export interface CombinationConstraints {
    /**
     * A list of constraints on combinations of orders and vehicles.
     * @type {Array<OrderVehicleCombinationConstraint>}
     * @memberof CombinationConstraints
     */
    orderVehicle?: Array<OrderVehicleCombinationConstraint>;
    /**
     * A list of constraints on combinations of depots and vehicles.
     * @type {Array<DepotVehicleCombinationConstraint>}
     * @memberof CombinationConstraints
     */
    depotVehicle?: Array<DepotVehicleCombinationConstraint>;
}

export function CombinationConstraintsFromJSON(json: any): CombinationConstraints {
    return CombinationConstraintsFromJSONTyped(json, false);
}

export function CombinationConstraintsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CombinationConstraints {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'orderVehicle': !exists(json, 'orderVehicle') ? undefined : ((json['orderVehicle'] as Array<any>).map(OrderVehicleCombinationConstraintFromJSON)),
        'depotVehicle': !exists(json, 'depotVehicle') ? undefined : ((json['depotVehicle'] as Array<any>).map(DepotVehicleCombinationConstraintFromJSON)),
    };
}

export function CombinationConstraintsToJSON(value?: CombinationConstraints | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'orderVehicle': value.orderVehicle === undefined ? undefined : ((value.orderVehicle as Array<any>).map(OrderVehicleCombinationConstraintToJSON)),
        'depotVehicle': value.depotVehicle === undefined ? undefined : ((value.depotVehicle as Array<any>).map(DepotVehicleCombinationConstraintToJSON)),
    };
}

