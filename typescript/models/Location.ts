/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StopProperties,
    StopPropertiesFromJSON,
    StopPropertiesFromJSONTyped,
    StopPropertiesToJSON,
} from './StopProperties';

/**
 * A specific location where goods have to be picked up or delivered, or where vehicles are located.
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * A unique identifier of the location.
     * @type {string}
     * @memberof Location
     */
    id: string;
    /**
     * The latitude value of the location in degrees (WGS84/EPSG:4326) from south to north.
     * @type {number}
     * @memberof Location
     */
    latitude: number;
    /**
     * The longitude value of the location in degrees (WGS84/EPSG:4326) from west to east.
     * @type {number}
     * @memberof Location
     */
    longitude: number;
    /**
     * 
     * @type {StopProperties}
     * @memberof Location
     */
    stopProperties?: StopProperties;
}

export function LocationFromJSON(json: any): Location {
    return LocationFromJSONTyped(json, false);
}

export function LocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Location {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'stopProperties': !exists(json, 'stopProperties') ? undefined : StopPropertiesFromJSON(json['stopProperties']),
    };
}

export function LocationToJSON(value?: Location | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'stopProperties': StopPropertiesToJSON(value.stopProperties),
    };
}

