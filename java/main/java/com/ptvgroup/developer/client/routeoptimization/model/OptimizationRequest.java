/*
 * OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.Constraints;
import com.ptvgroup.developer.client.routeoptimization.model.Depot;
import com.ptvgroup.developer.client.routeoptimization.model.Location;
import com.ptvgroup.developer.client.routeoptimization.model.OptimizationSettings;
import com.ptvgroup.developer.client.routeoptimization.model.Orders;
import com.ptvgroup.developer.client.routeoptimization.model.Vehicle;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The request data needed to start an optimization.
 */
@ApiModel(description = "The request data needed to start an optimization.")
@JsonPropertyOrder({
  OptimizationRequest.JSON_PROPERTY_SETTINGS,
  OptimizationRequest.JSON_PROPERTY_LOCATIONS,
  OptimizationRequest.JSON_PROPERTY_ORDERS,
  OptimizationRequest.JSON_PROPERTY_VEHICLES,
  OptimizationRequest.JSON_PROPERTY_DEPOTS,
  OptimizationRequest.JSON_PROPERTY_CONSTRAINTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-09T13:34:30.390729Z[Etc/UTC]")
public class OptimizationRequest {
  public static final String JSON_PROPERTY_SETTINGS = "settings";
  private OptimizationSettings settings;

  public static final String JSON_PROPERTY_LOCATIONS = "locations";
  private List<Location> locations = new ArrayList<>();

  public static final String JSON_PROPERTY_ORDERS = "orders";
  private Orders orders;

  public static final String JSON_PROPERTY_VEHICLES = "vehicles";
  private List<Vehicle> vehicles = new ArrayList<>();

  public static final String JSON_PROPERTY_DEPOTS = "depots";
  private List<Depot> depots = null;

  public static final String JSON_PROPERTY_CONSTRAINTS = "constraints";
  private Constraints constraints;

  public OptimizationRequest() { 
  }

  public OptimizationRequest settings(OptimizationSettings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OptimizationSettings getSettings() {
    return settings;
  }


  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSettings(OptimizationSettings settings) {
    this.settings = settings;
  }


  public OptimizationRequest locations(List<Location> locations) {
    this.locations = locations;
    return this;
  }

  public OptimizationRequest addLocationsItem(Location locationsItem) {
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * A list of locations where goods have to be picked up or delivered, or where vehicles are located.
   * @return locations
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of locations where goods have to be picked up or delivered, or where vehicles are located.")
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Location> getLocations() {
    return locations;
  }


  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocations(List<Location> locations) {
    this.locations = locations;
  }


  public OptimizationRequest orders(Orders orders) {
    this.orders = orders;
    return this;
  }

   /**
   * Get orders
   * @return orders
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ORDERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Orders getOrders() {
    return orders;
  }


  @JsonProperty(JSON_PROPERTY_ORDERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrders(Orders orders) {
    this.orders = orders;
  }


  public OptimizationRequest vehicles(List<Vehicle> vehicles) {
    this.vehicles = vehicles;
    return this;
  }

  public OptimizationRequest addVehiclesItem(Vehicle vehiclesItem) {
    this.vehicles.add(vehiclesItem);
    return this;
  }

   /**
   * A list of vehicles that can be used by optimization to schedule routes. Optimization can only assign a single route to a vehicle and must respect the properties and constraints of the vehicle. 
   * @return vehicles
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of vehicles that can be used by optimization to schedule routes. Optimization can only assign a single route to a vehicle and must respect the properties and constraints of the vehicle. ")
  @JsonProperty(JSON_PROPERTY_VEHICLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Vehicle> getVehicles() {
    return vehicles;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVehicles(List<Vehicle> vehicles) {
    this.vehicles = vehicles;
  }


  public OptimizationRequest depots(List<Depot> depots) {
    this.depots = depots;
    return this;
  }

  public OptimizationRequest addDepotsItem(Depot depotsItem) {
    if (this.depots == null) {
      this.depots = new ArrayList<>();
    }
    this.depots.add(depotsItem);
    return this;
  }

   /**
   * A list of depots where pickup orders can be delivered to or delivery orders can be picked up from. When providing pickup or delivery orders, at least one depot must be specified. Depots must not be specified when all orders are pickup-delivery orders. When stopping at a depot, all pickup orders present in the vehicle are unloaded first. Afterwards, delivery orders can be loaded into the vehicle. Those must be delivered before stopping at the next depot. 
   * @return depots
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of depots where pickup orders can be delivered to or delivery orders can be picked up from. When providing pickup or delivery orders, at least one depot must be specified. Depots must not be specified when all orders are pickup-delivery orders. When stopping at a depot, all pickup orders present in the vehicle are unloaded first. Afterwards, delivery orders can be loaded into the vehicle. Those must be delivered before stopping at the next depot. ")
  @JsonProperty(JSON_PROPERTY_DEPOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Depot> getDepots() {
    return depots;
  }


  @JsonProperty(JSON_PROPERTY_DEPOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDepots(List<Depot> depots) {
    this.depots = depots;
  }


  public OptimizationRequest constraints(Constraints constraints) {
    this.constraints = constraints;
    return this;
  }

   /**
   * Get constraints
   * @return constraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Constraints getConstraints() {
    return constraints;
  }


  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConstraints(Constraints constraints) {
    this.constraints = constraints;
  }


  /**
   * Return true if this OptimizationRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizationRequest optimizationRequest = (OptimizationRequest) o;
    return Objects.equals(this.settings, optimizationRequest.settings) &&
        Objects.equals(this.locations, optimizationRequest.locations) &&
        Objects.equals(this.orders, optimizationRequest.orders) &&
        Objects.equals(this.vehicles, optimizationRequest.vehicles) &&
        Objects.equals(this.depots, optimizationRequest.depots) &&
        Objects.equals(this.constraints, optimizationRequest.constraints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(settings, locations, orders, vehicles, depots, constraints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizationRequest {\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("    vehicles: ").append(toIndentedString(vehicles)).append("\n");
    sb.append("    depots: ").append(toIndentedString(depots)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

