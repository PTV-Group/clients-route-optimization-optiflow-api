/*
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Describes the start of a route assigned to the vehicle.
 */
@ApiModel(description = "Describes the start of a route assigned to the vehicle.")
@JsonPropertyOrder({
  VehicleStart.JSON_PROPERTY_LOCATION_ID,
  VehicleStart.JSON_PROPERTY_EARLIEST_START_TIME,
  VehicleStart.JSON_PROPERTY_LATEST_START_TIME,
  VehicleStart.JSON_PROPERTY_DURATION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-10T11:34:31.010084Z[Etc/UTC]")
public class VehicleStart {
  public static final String JSON_PROPERTY_LOCATION_ID = "locationId";
  private String locationId;

  public static final String JSON_PROPERTY_EARLIEST_START_TIME = "earliestStartTime";
  private OffsetDateTime earliestStartTime;

  public static final String JSON_PROPERTY_LATEST_START_TIME = "latestStartTime";
  private OffsetDateTime latestStartTime;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Integer duration = 0;

  public VehicleStart() { 
  }

  public VehicleStart locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * The unique identifier of the location where a route assigned to the vehicle must start.
   * @return locationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "GHENT", required = true, value = "The unique identifier of the location where a route assigned to the vehicle must start.")
  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocationId() {
    return locationId;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public VehicleStart earliestStartTime(OffsetDateTime earliestStartTime) {
    this.earliestStartTime = earliestStartTime;
    return this;
  }

   /**
   * The earliest point in time a route assigned to the vehicle may start. This must be not be later than the vehicle&#39;s latest end time. When used in conjunction with a latest start time, the earliest start time must not be later than the latest start time.  Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6) and not before &#x60;1970-01-01T00:00:00+00:00&#x60;. The date must provide an offset to UTC. 
   * @return earliestStartTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2023-10-03T08:00Z", required = true, value = "The earliest point in time a route assigned to the vehicle may start. This must be not be later than the vehicle's latest end time. When used in conjunction with a latest start time, the earliest start time must not be later than the latest start time.  Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6) and not before `1970-01-01T00:00:00+00:00`. The date must provide an offset to UTC. ")
  @JsonProperty(JSON_PROPERTY_EARLIEST_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getEarliestStartTime() {
    return earliestStartTime;
  }


  @JsonProperty(JSON_PROPERTY_EARLIEST_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEarliestStartTime(OffsetDateTime earliestStartTime) {
    this.earliestStartTime = earliestStartTime;
  }


  public VehicleStart latestStartTime(OffsetDateTime latestStartTime) {
    this.latestStartTime = latestStartTime;
    return this;
  }

   /**
   * The latest point in time a route assigned to the vehicle may start. This must not be earlier than the vehicle&#39;s earliest start time nor later than the vehicle&#39;s earliest end time. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6) and not before &#x60;1970-01-01T00:00:00+00:00&#x60;. The date must provide an offset to UTC. 
   * @return latestStartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-10-03T09:00Z", value = "The latest point in time a route assigned to the vehicle may start. This must not be earlier than the vehicle's earliest start time nor later than the vehicle's earliest end time. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6) and not before `1970-01-01T00:00:00+00:00`. The date must provide an offset to UTC. ")
  @JsonProperty(JSON_PROPERTY_LATEST_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLatestStartTime() {
    return latestStartTime;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatestStartTime(OffsetDateTime latestStartTime) {
    this.latestStartTime = latestStartTime;
  }


  public VehicleStart duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Describes how long [s] it takes for the vehicle to depart at its start location after the route starts.
   * minimum: 0
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1800", value = "Describes how long [s] it takes for the vehicle to depart at its start location after the route starts.")
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  /**
   * Return true if this VehicleStart object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VehicleStart vehicleStart = (VehicleStart) o;
    return Objects.equals(this.locationId, vehicleStart.locationId) &&
        Objects.equals(this.earliestStartTime, vehicleStart.earliestStartTime) &&
        Objects.equals(this.latestStartTime, vehicleStart.latestStartTime) &&
        Objects.equals(this.duration, vehicleStart.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationId, earliestStartTime, latestStartTime, duration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VehicleStart {\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    earliestStartTime: ").append(toIndentedString(earliestStartTime)).append("\n");
    sb.append("    latestStartTime: ").append(toIndentedString(latestStartTime)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

