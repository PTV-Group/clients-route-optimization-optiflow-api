/*
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.CombinationConstraints;
import com.ptvgroup.developer.client.routeoptimization.model.OrderConstraints;
import com.ptvgroup.developer.client.routeoptimization.model.TaskConstraints;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Describes constraints on the routes that can be scheduled by the optimization.
 */
@ApiModel(description = "Describes constraints on the routes that can be scheduled by the optimization.")
@JsonPropertyOrder({
  Constraints.JSON_PROPERTY_COMBINATIONS,
  Constraints.JSON_PROPERTY_ORDERS,
  Constraints.JSON_PROPERTY_TASKS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-10T11:34:31.010084Z[Etc/UTC]")
public class Constraints {
  public static final String JSON_PROPERTY_COMBINATIONS = "combinations";
  private CombinationConstraints combinations;

  public static final String JSON_PROPERTY_ORDERS = "orders";
  private OrderConstraints orders;

  public static final String JSON_PROPERTY_TASKS = "tasks";
  private TaskConstraints tasks;

  public Constraints() { 
  }

  public Constraints combinations(CombinationConstraints combinations) {
    this.combinations = combinations;
    return this;
  }

   /**
   * Get combinations
   * @return combinations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMBINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CombinationConstraints getCombinations() {
    return combinations;
  }


  @JsonProperty(JSON_PROPERTY_COMBINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCombinations(CombinationConstraints combinations) {
    this.combinations = combinations;
  }


  public Constraints orders(OrderConstraints orders) {
    this.orders = orders;
    return this;
  }

   /**
   * Get orders
   * @return orders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrderConstraints getOrders() {
    return orders;
  }


  @JsonProperty(JSON_PROPERTY_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrders(OrderConstraints orders) {
    this.orders = orders;
  }


  public Constraints tasks(TaskConstraints tasks) {
    this.tasks = tasks;
    return this;
  }

   /**
   * Get tasks
   * @return tasks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TASKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskConstraints getTasks() {
    return tasks;
  }


  @JsonProperty(JSON_PROPERTY_TASKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTasks(TaskConstraints tasks) {
    this.tasks = tasks;
  }


  /**
   * Return true if this Constraints object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Constraints constraints = (Constraints) o;
    return Objects.equals(this.combinations, constraints.combinations) &&
        Objects.equals(this.orders, constraints.orders) &&
        Objects.equals(this.tasks, constraints.tasks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(combinations, orders, tasks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Constraints {\n");
    sb.append("    combinations: ").append(toIndentedString(combinations)).append("\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

