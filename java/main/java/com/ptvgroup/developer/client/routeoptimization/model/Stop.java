/*
 * OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.Appointment;
import com.ptvgroup.developer.client.routeoptimization.model.Leg;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A location visit on a route where one or more tasks are scheduled. 
 */
@ApiModel(description = "A location visit on a route where one or more tasks are scheduled. ")
@JsonPropertyOrder({
  Stop.JSON_PROPERTY_LOCATION_ID,
  Stop.JSON_PROPERTY_APPROACH,
  Stop.JSON_PROPERTY_ARRIVAL,
  Stop.JSON_PROPERTY_PREPARATION_DURATION,
  Stop.JSON_PROPERTY_APPOINTMENTS,
  Stop.JSON_PROPERTY_DEPARTURE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-08T10:16:41.445132Z[Etc/UTC]")
public class Stop {
  public static final String JSON_PROPERTY_LOCATION_ID = "locationId";
  private String locationId;

  public static final String JSON_PROPERTY_APPROACH = "approach";
  private Leg approach;

  public static final String JSON_PROPERTY_ARRIVAL = "arrival";
  private OffsetDateTime arrival;

  public static final String JSON_PROPERTY_PREPARATION_DURATION = "preparationDuration";
  private Integer preparationDuration;

  public static final String JSON_PROPERTY_APPOINTMENTS = "appointments";
  private List<Appointment> appointments = null;

  public static final String JSON_PROPERTY_DEPARTURE = "departure";
  private OffsetDateTime departure;

  public Stop() { 
  }

  public Stop locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * The unique identifier of the location where this stop is taking place.
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LOCATION-123", value = "The unique identifier of the location where this stop is taking place.")
  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocationId() {
    return locationId;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public Stop approach(Leg approach) {
    this.approach = approach;
    return this;
  }

   /**
   * Get approach
   * @return approach
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_APPROACH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Leg getApproach() {
    return approach;
  }


  @JsonProperty(JSON_PROPERTY_APPROACH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApproach(Leg approach) {
    this.approach = approach;
  }


  public Stop arrival(OffsetDateTime arrival) {
    this.arrival = arrival;
    return this;
  }

   /**
   * The point in time when the vehicle arrives at the location. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). 
   * @return arrival
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-10-03T12:30Z", value = "The point in time when the vehicle arrives at the location. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). ")
  @JsonProperty(JSON_PROPERTY_ARRIVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getArrival() {
    return arrival;
  }


  @JsonProperty(JSON_PROPERTY_ARRIVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArrival(OffsetDateTime arrival) {
    this.arrival = arrival;
  }


  public Stop preparationDuration(Integer preparationDuration) {
    this.preparationDuration = preparationDuration;
    return this;
  }

   /**
   * A period of time [s] that is required between the arrival at the location and the start of the first appointment. The preparation duration is scheduled before tasks can be executed at the stop.
   * minimum: 0
   * @return preparationDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "600", value = "A period of time [s] that is required between the arrival at the location and the start of the first appointment. The preparation duration is scheduled before tasks can be executed at the stop.")
  @JsonProperty(JSON_PROPERTY_PREPARATION_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPreparationDuration() {
    return preparationDuration;
  }


  @JsonProperty(JSON_PROPERTY_PREPARATION_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreparationDuration(Integer preparationDuration) {
    this.preparationDuration = preparationDuration;
  }


  public Stop appointments(List<Appointment> appointments) {
    this.appointments = appointments;
    return this;
  }

  public Stop addAppointmentsItem(Appointment appointmentsItem) {
    if (this.appointments == null) {
      this.appointments = new ArrayList<>();
    }
    this.appointments.add(appointmentsItem);
    return this;
  }

   /**
   * A list of appointments that describe the tasks that are scheduled for execution at this stop. Consecutive tasks are grouped into an appointment if they have been assigned to the same time slot. 
   * @return appointments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of appointments that describe the tasks that are scheduled for execution at this stop. Consecutive tasks are grouped into an appointment if they have been assigned to the same time slot. ")
  @JsonProperty(JSON_PROPERTY_APPOINTMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Appointment> getAppointments() {
    return appointments;
  }


  @JsonProperty(JSON_PROPERTY_APPOINTMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppointments(List<Appointment> appointments) {
    this.appointments = appointments;
  }


  public Stop departure(OffsetDateTime departure) {
    this.departure = departure;
    return this;
  }

   /**
   * The point in time when the vehicle departs at the location. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). 
   * @return departure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-10-03T14:00Z", value = "The point in time when the vehicle departs at the location. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). ")
  @JsonProperty(JSON_PROPERTY_DEPARTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeparture() {
    return departure;
  }


  @JsonProperty(JSON_PROPERTY_DEPARTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeparture(OffsetDateTime departure) {
    this.departure = departure;
  }


  /**
   * Return true if this Stop object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Stop stop = (Stop) o;
    return Objects.equals(this.locationId, stop.locationId) &&
        Objects.equals(this.approach, stop.approach) &&
        Objects.equals(this.arrival, stop.arrival) &&
        Objects.equals(this.preparationDuration, stop.preparationDuration) &&
        Objects.equals(this.appointments, stop.appointments) &&
        Objects.equals(this.departure, stop.departure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationId, approach, arrival, preparationDuration, appointments, departure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Stop {\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    approach: ").append(toIndentedString(approach)).append("\n");
    sb.append("    arrival: ").append(toIndentedString(arrival)).append("\n");
    sb.append("    preparationDuration: ").append(toIndentedString(preparationDuration)).append("\n");
    sb.append("    appointments: ").append(toIndentedString(appointments)).append("\n");
    sb.append("    departure: ").append(toIndentedString(departure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

