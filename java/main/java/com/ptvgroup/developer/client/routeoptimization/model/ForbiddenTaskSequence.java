/*
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.ForbiddenTaskSequenceType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Constrains tasks belonging a certain category to be executed before tasks belonging to another category on the route.
 */
@ApiModel(description = "Constrains tasks belonging a certain category to be executed before tasks belonging to another category on the route.")
@JsonPropertyOrder({
  ForbiddenTaskSequence.JSON_PROPERTY_FIRST_TASK_CATEGORY,
  ForbiddenTaskSequence.JSON_PROPERTY_TYPE,
  ForbiddenTaskSequence.JSON_PROPERTY_SECOND_TASK_CATEGORY,
  ForbiddenTaskSequence.JSON_PROPERTY_VEHICLE_CATEGORY
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-13T09:16:08.739853Z[Etc/UTC]")
public class ForbiddenTaskSequence {
  public static final String JSON_PROPERTY_FIRST_TASK_CATEGORY = "firstTaskCategory";
  private String firstTaskCategory;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ForbiddenTaskSequenceType type;

  public static final String JSON_PROPERTY_SECOND_TASK_CATEGORY = "secondTaskCategory";
  private String secondTaskCategory;

  public static final String JSON_PROPERTY_VEHICLE_CATEGORY = "vehicleCategory";
  private String vehicleCategory;

  public ForbiddenTaskSequence() { 
  }

  public ForbiddenTaskSequence firstTaskCategory(String firstTaskCategory) {
    this.firstTaskCategory = firstTaskCategory;
    return this;
  }

   /**
   * The category of tasks that cannot be scheduled on the route before a task with the second task category. The constraint will be ignored when no task belongs to this category. 
   * @return firstTaskCategory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "BLACK_PAINT", required = true, value = "The category of tasks that cannot be scheduled on the route before a task with the second task category. The constraint will be ignored when no task belongs to this category. ")
  @JsonProperty(JSON_PROPERTY_FIRST_TASK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstTaskCategory() {
    return firstTaskCategory;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_TASK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstTaskCategory(String firstTaskCategory) {
    this.firstTaskCategory = firstTaskCategory;
  }


  public ForbiddenTaskSequence type(ForbiddenTaskSequenceType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ForbiddenTaskSequenceType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ForbiddenTaskSequenceType type) {
    this.type = type;
  }


  public ForbiddenTaskSequence secondTaskCategory(String secondTaskCategory) {
    this.secondTaskCategory = secondTaskCategory;
    return this;
  }

   /**
   * The category of the tasks that must not be preceded in the route by tasks belonging to the first task category. The constraint will be ignored when no task belongs to this category. 
   * @return secondTaskCategory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "WHITE_PAINT", required = true, value = "The category of the tasks that must not be preceded in the route by tasks belonging to the first task category. The constraint will be ignored when no task belongs to this category. ")
  @JsonProperty(JSON_PROPERTY_SECOND_TASK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSecondTaskCategory() {
    return secondTaskCategory;
  }


  @JsonProperty(JSON_PROPERTY_SECOND_TASK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecondTaskCategory(String secondTaskCategory) {
    this.secondTaskCategory = secondTaskCategory;
  }


  public ForbiddenTaskSequence vehicleCategory(String vehicleCategory) {
    this.vehicleCategory = vehicleCategory;
    return this;
  }

   /**
   * The category of vehicles to which this constraint applies. When omitted the constraint applies to all vehicles. The constraint will be ignored when no vehicle belongs to this category. 
   * @return vehicleCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "VAN", value = "The category of vehicles to which this constraint applies. When omitted the constraint applies to all vehicles. The constraint will be ignored when no vehicle belongs to this category. ")
  @JsonProperty(JSON_PROPERTY_VEHICLE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVehicleCategory() {
    return vehicleCategory;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVehicleCategory(String vehicleCategory) {
    this.vehicleCategory = vehicleCategory;
  }


  /**
   * Return true if this ForbiddenTaskSequence object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForbiddenTaskSequence forbiddenTaskSequence = (ForbiddenTaskSequence) o;
    return Objects.equals(this.firstTaskCategory, forbiddenTaskSequence.firstTaskCategory) &&
        Objects.equals(this.type, forbiddenTaskSequence.type) &&
        Objects.equals(this.secondTaskCategory, forbiddenTaskSequence.secondTaskCategory) &&
        Objects.equals(this.vehicleCategory, forbiddenTaskSequence.vehicleCategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstTaskCategory, type, secondTaskCategory, vehicleCategory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForbiddenTaskSequence {\n");
    sb.append("    firstTaskCategory: ").append(toIndentedString(firstTaskCategory)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    secondTaskCategory: ").append(toIndentedString(secondTaskCategory)).append("\n");
    sb.append("    vehicleCategory: ").append(toIndentedString(vehicleCategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

