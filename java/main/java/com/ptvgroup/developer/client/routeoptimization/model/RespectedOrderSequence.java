/*
 * OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A sequence that must be respected when scheduling routes. Orders belonging to a category that occurs earlier in the sequence must be delivered before an order belonging to a category later in the sequence can be picked up. 
 */
@ApiModel(description = "A sequence that must be respected when scheduling routes. Orders belonging to a category that occurs earlier in the sequence must be delivered before an order belonging to a category later in the sequence can be picked up. ")
@JsonPropertyOrder({
  RespectedOrderSequence.JSON_PROPERTY_ORDER_CATEGORIES,
  RespectedOrderSequence.JSON_PROPERTY_VEHICLE_CATEGORY
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-09T13:34:30.390729Z[Etc/UTC]")
public class RespectedOrderSequence {
  public static final String JSON_PROPERTY_ORDER_CATEGORIES = "orderCategories";
  private Set<String> orderCategories = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_VEHICLE_CATEGORY = "vehicleCategory";
  private String vehicleCategory;

  public RespectedOrderSequence() { 
  }

  public RespectedOrderSequence orderCategories(Set<String> orderCategories) {
    this.orderCategories = orderCategories;
    return this;
  }

  public RespectedOrderSequence addOrderCategoriesItem(String orderCategoriesItem) {
    this.orderCategories.add(orderCategoriesItem);
    return this;
  }

   /**
   * The sequence of order categories that has to be respected within a route. The index of the category in the list determines the sequence. Categories that do not correspond to any order will be ignored. 
   * @return orderCategories
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "[\"FOOD\",\"DIRT\"]", required = true, value = "The sequence of order categories that has to be respected within a route. The index of the category in the list determines the sequence. Categories that do not correspond to any order will be ignored. ")
  @JsonProperty(JSON_PROPERTY_ORDER_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<String> getOrderCategories() {
    return orderCategories;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ORDER_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderCategories(Set<String> orderCategories) {
    this.orderCategories = orderCategories;
  }


  public RespectedOrderSequence vehicleCategory(String vehicleCategory) {
    this.vehicleCategory = vehicleCategory;
    return this;
  }

   /**
   * The category of vehicles to which this constraint applies. When omitted the constraint applies to all vehicles. The constraint will be ignored if no vehicle belongs to this category. 
   * @return vehicleCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SMALL_TRUCK", value = "The category of vehicles to which this constraint applies. When omitted the constraint applies to all vehicles. The constraint will be ignored if no vehicle belongs to this category. ")
  @JsonProperty(JSON_PROPERTY_VEHICLE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVehicleCategory() {
    return vehicleCategory;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVehicleCategory(String vehicleCategory) {
    this.vehicleCategory = vehicleCategory;
  }


  /**
   * Return true if this RespectedOrderSequence object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RespectedOrderSequence respectedOrderSequence = (RespectedOrderSequence) o;
    return Objects.equals(this.orderCategories, respectedOrderSequence.orderCategories) &&
        Objects.equals(this.vehicleCategory, respectedOrderSequence.vehicleCategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderCategories, vehicleCategory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RespectedOrderSequence {\n");
    sb.append("    orderCategories: ").append(toIndentedString(orderCategories)).append("\n");
    sb.append("    vehicleCategory: ").append(toIndentedString(vehicleCategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

