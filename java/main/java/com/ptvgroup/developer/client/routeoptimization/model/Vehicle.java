/*
 * OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.BreakSettings;
import com.ptvgroup.developer.client.routeoptimization.model.VehicleConstraints;
import com.ptvgroup.developer.client.routeoptimization.model.VehicleCosts;
import com.ptvgroup.developer.client.routeoptimization.model.VehicleEnd;
import com.ptvgroup.developer.client.routeoptimization.model.VehicleRouting;
import com.ptvgroup.developer.client.routeoptimization.model.VehicleStart;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A vehicle that can be used to schedule routes. The optimization can only assign a single route to a vehicle while respecting the properties and constraints of the vehicle. 
 */
@ApiModel(description = "A vehicle that can be used to schedule routes. The optimization can only assign a single route to a vehicle while respecting the properties and constraints of the vehicle. ")
@JsonPropertyOrder({
  Vehicle.JSON_PROPERTY_ID,
  Vehicle.JSON_PROPERTY_START,
  Vehicle.JSON_PROPERTY_END,
  Vehicle.JSON_PROPERTY_ROUTING,
  Vehicle.JSON_PROPERTY_COSTS,
  Vehicle.JSON_PROPERTY_BREAKS,
  Vehicle.JSON_PROPERTY_CONSTRAINTS,
  Vehicle.JSON_PROPERTY_CATEGORIES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-09T13:34:30.390729Z[Etc/UTC]")
public class Vehicle {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_START = "start";
  private VehicleStart start;

  public static final String JSON_PROPERTY_END = "end";
  private VehicleEnd end;

  public static final String JSON_PROPERTY_ROUTING = "routing";
  private VehicleRouting routing;

  public static final String JSON_PROPERTY_COSTS = "costs";
  private VehicleCosts costs;

  public static final String JSON_PROPERTY_BREAKS = "breaks";
  private BreakSettings breaks;

  public static final String JSON_PROPERTY_CONSTRAINTS = "constraints";
  private VehicleConstraints constraints;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  private List<String> categories = null;

  public Vehicle() { 
  }

  public Vehicle id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A unique identifier of the vehicle.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "VEHICLE-123", required = true, value = "A unique identifier of the vehicle.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Vehicle start(VehicleStart start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VehicleStart getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStart(VehicleStart start) {
    this.start = start;
  }


  public Vehicle end(VehicleEnd end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VehicleEnd getEnd() {
    return end;
  }


  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnd(VehicleEnd end) {
    this.end = end;
  }


  public Vehicle routing(VehicleRouting routing) {
    this.routing = routing;
    return this;
  }

   /**
   * Get routing
   * @return routing
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ROUTING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VehicleRouting getRouting() {
    return routing;
  }


  @JsonProperty(JSON_PROPERTY_ROUTING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRouting(VehicleRouting routing) {
    this.routing = routing;
  }


  public Vehicle costs(VehicleCosts costs) {
    this.costs = costs;
    return this;
  }

   /**
   * Get costs
   * @return costs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_COSTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VehicleCosts getCosts() {
    return costs;
  }


  @JsonProperty(JSON_PROPERTY_COSTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCosts(VehicleCosts costs) {
    this.costs = costs;
  }


  public Vehicle breaks(BreakSettings breaks) {
    this.breaks = breaks;
    return this;
  }

   /**
   * Get breaks
   * @return breaks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BREAKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BreakSettings getBreaks() {
    return breaks;
  }


  @JsonProperty(JSON_PROPERTY_BREAKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBreaks(BreakSettings breaks) {
    this.breaks = breaks;
  }


  public Vehicle constraints(VehicleConstraints constraints) {
    this.constraints = constraints;
    return this;
  }

   /**
   * Get constraints
   * @return constraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VehicleConstraints getConstraints() {
    return constraints;
  }


  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConstraints(VehicleConstraints constraints) {
    this.constraints = constraints;
  }


  public Vehicle categories(List<String> categories) {
    this.categories = categories;
    return this;
  }

  public Vehicle addCategoriesItem(String categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * A list of categories the vehicle belongs to that can be used to describe constraints.
   * @return categories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"COOLING\",\"SMALL_TRUCK\",\"FORK_LIFT\",\"SINGLE_COMPARTMENT\"]", value = "A list of categories the vehicle belongs to that can be used to describe constraints.")
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCategories() {
    return categories;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(List<String> categories) {
    this.categories = categories;
  }


  /**
   * Return true if this Vehicle object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vehicle vehicle = (Vehicle) o;
    return Objects.equals(this.id, vehicle.id) &&
        Objects.equals(this.start, vehicle.start) &&
        Objects.equals(this.end, vehicle.end) &&
        Objects.equals(this.routing, vehicle.routing) &&
        Objects.equals(this.costs, vehicle.costs) &&
        Objects.equals(this.breaks, vehicle.breaks) &&
        Objects.equals(this.constraints, vehicle.constraints) &&
        Objects.equals(this.categories, vehicle.categories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, start, end, routing, costs, breaks, constraints, categories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vehicle {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    routing: ").append(toIndentedString(routing)).append("\n");
    sb.append("    costs: ").append(toIndentedString(costs)).append("\n");
    sb.append("    breaks: ").append(toIndentedString(breaks)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

