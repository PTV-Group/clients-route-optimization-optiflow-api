/*
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.TimeSlot;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Specifies the necessary information needed to schedule a stop at this location. This information is not relevant when the location is the start or end location of a vehicle. 
 */
@ApiModel(description = "Specifies the necessary information needed to schedule a stop at this location. This information is not relevant when the location is the start or end location of a vehicle. ")
@JsonPropertyOrder({
  StopProperties.JSON_PROPERTY_PREPARATION_DURATION,
  StopProperties.JSON_PROPERTY_TIME_SLOTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-10T11:34:31.010084Z[Etc/UTC]")
public class StopProperties {
  public static final String JSON_PROPERTY_PREPARATION_DURATION = "preparationDuration";
  private Integer preparationDuration = 0;

  public static final String JSON_PROPERTY_TIME_SLOTS = "timeSlots";
  private List<TimeSlot> timeSlots = null;

  public StopProperties() { 
  }

  public StopProperties preparationDuration(Integer preparationDuration) {
    this.preparationDuration = preparationDuration;
    return this;
  }

   /**
   * Defines a duration [s] that is needed before an appointment (one or more tasks) can start at this location. This duration is needed once per stop whenever tasks are executed.
   * minimum: 0
   * @return preparationDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "900", value = "Defines a duration [s] that is needed before an appointment (one or more tasks) can start at this location. This duration is needed once per stop whenever tasks are executed.")
  @JsonProperty(JSON_PROPERTY_PREPARATION_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPreparationDuration() {
    return preparationDuration;
  }


  @JsonProperty(JSON_PROPERTY_PREPARATION_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreparationDuration(Integer preparationDuration) {
    this.preparationDuration = preparationDuration;
  }


  public StopProperties timeSlots(List<TimeSlot> timeSlots) {
    this.timeSlots = timeSlots;
    return this;
  }

  public StopProperties addTimeSlotsItem(TimeSlot timeSlotsItem) {
    if (this.timeSlots == null) {
      this.timeSlots = new ArrayList<>();
    }
    this.timeSlots.add(timeSlotsItem);
    return this;
  }

   /**
   * A list of time intervals that describe when tasks can be executed at this location. Consecutive tasks with the same time slot are grouped to an appointment. The timings of the appointment must satisfy the restrictions of the time slot. When omitted or empty, all tasks within a stop at this location will be grouped into one appointment and the timings of this appointment are unrestricted. 
   * @return timeSlots
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of time intervals that describe when tasks can be executed at this location. Consecutive tasks with the same time slot are grouped to an appointment. The timings of the appointment must satisfy the restrictions of the time slot. When omitted or empty, all tasks within a stop at this location will be grouped into one appointment and the timings of this appointment are unrestricted. ")
  @JsonProperty(JSON_PROPERTY_TIME_SLOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TimeSlot> getTimeSlots() {
    return timeSlots;
  }


  @JsonProperty(JSON_PROPERTY_TIME_SLOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeSlots(List<TimeSlot> timeSlots) {
    this.timeSlots = timeSlots;
  }


  /**
   * Return true if this StopProperties object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopProperties stopProperties = (StopProperties) o;
    return Objects.equals(this.preparationDuration, stopProperties.preparationDuration) &&
        Objects.equals(this.timeSlots, stopProperties.timeSlots);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preparationDuration, timeSlots);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopProperties {\n");
    sb.append("    preparationDuration: ").append(toIndentedString(preparationDuration)).append("\n");
    sb.append("    timeSlots: ").append(toIndentedString(timeSlots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

