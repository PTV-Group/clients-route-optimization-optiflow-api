/*
 * OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Specifies how time-distance data must be calculated for routes driven by the vehicle.
 */
@ApiModel(description = "Specifies how time-distance data must be calculated for routes driven by the vehicle.")
@JsonPropertyOrder({
  VehicleRouting.JSON_PROPERTY_PROFILE,
  VehicleRouting.JSON_PROPERTY_SPEED_FACTOR
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-08T10:16:41.445132Z[Etc/UTC]")
public class VehicleRouting {
  public static final String JSON_PROPERTY_PROFILE = "profile";
  private String profile;

  public static final String JSON_PROPERTY_SPEED_FACTOR = "speedFactor";
  private Double speedFactor = 1d;

  public VehicleRouting() { 
  }

  public VehicleRouting profile(String profile) {
    this.profile = profile;
    return this;
  }

   /**
   * A profile defines a vehicle by a set of attributes, matching typical transport situations. It must be the name of one of the predefined profiles *EUR_VAN* or *EUR_TRUCK_40T*. Only one profile may be used within a single optimization. 
   * @return profile
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "EUR_VAN", required = true, value = "A profile defines a vehicle by a set of attributes, matching typical transport situations. It must be the name of one of the predefined profiles *EUR_VAN* or *EUR_TRUCK_40T*. Only one profile may be used within a single optimization. ")
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfile(String profile) {
    this.profile = profile;
  }


  public VehicleRouting speedFactor(Double speedFactor) {
    this.speedFactor = speedFactor;
    return this;
  }

   /**
   * An additional factor to apply to the speed of the vehicle. When lower than one, the driving durations of the vehicle will increase, when greater than one, the driving durations of the vehicle will decrease. 
   * minimum: 0
   * @return speedFactor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.1", value = "An additional factor to apply to the speed of the vehicle. When lower than one, the driving durations of the vehicle will increase, when greater than one, the driving durations of the vehicle will decrease. ")
  @JsonProperty(JSON_PROPERTY_SPEED_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSpeedFactor() {
    return speedFactor;
  }


  @JsonProperty(JSON_PROPERTY_SPEED_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpeedFactor(Double speedFactor) {
    this.speedFactor = speedFactor;
  }


  /**
   * Return true if this VehicleRouting object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VehicleRouting vehicleRouting = (VehicleRouting) o;
    return Objects.equals(this.profile, vehicleRouting.profile) &&
        Objects.equals(this.speedFactor, vehicleRouting.speedFactor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profile, speedFactor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VehicleRouting {\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    speedFactor: ").append(toIndentedString(speedFactor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

