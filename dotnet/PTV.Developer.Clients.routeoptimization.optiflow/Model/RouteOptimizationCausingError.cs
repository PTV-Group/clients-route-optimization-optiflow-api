/*
 * Route Optimization OptiFlow
 *
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.6
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.routeoptimization.optiflow.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.routeoptimization.optiflow.Model
{
    /// <summary>
    /// RouteOptimizationCausingError
    /// </summary>
    [DataContract(Name = "CausingError")]
    public partial class RouteOptimizationCausingError : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationCausingError" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RouteOptimizationCausingError() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationCausingError" /> class.
        /// </summary>
        /// <param name="description">A human readable message that describes the error. (required).</param>
        /// <param name="errorCode">A constant string that can be used to identify this error class programmatically. An errorCode can have **details** to provide information in additional properties which are described with the code they apply to. They are of type string unless otherwise specified. Note that additional errorCodes as well as the **details** of existing errorCodes may be added at any time. Furthermore, the **description** may change at any time.  **Error codes for** &#x60;GENERAL_VALIDATION_ERROR&#x60; * &#x60;GENERAL_INVALID_VALUE&#x60; - A parameter is set to an invalid value.   * &#x60;value&#x60; - The invalid value. * &#x60;GENERAL_UNRECOGNIZED_PARAMETER&#x60; - A parameter is unknown. * &#x60;GENERAL_MISSING_PARAMETER&#x60; - A required parameter is missing. * &#x60;GENERAL_PATTERN_VIOLATED&#x60; - The value of a parameter does not match its pattern. * &#x60;GENERAL_INVALID_INTERVAL&#x60; - A time interval is invalid, i.e. start is greater than end. * &#x60;GENERAL_MINIMUM_LENGTH_VIOLATED&#x60; - The minimum length is violated.   * &#x60;minimumLength&#x60; - The minimum length (integer). * &#x60;GENERAL_MAXIMUM_LENGTH_VIOLATED&#x60; - The maximum length is violated.   * &#x60;maximumLength&#x60; - The maximum length (integer). * &#x60;GENERAL_DUPLICATE_ID&#x60; - Two or more objects of the same type have the same ID.   * &#x60;value&#x60; - The duplicated value.   * &#x60;indexes&#x60; - The list indexes of the objects with the same ID. * &#x60;GENERAL_MINIMUM_VALUE_VIOLATED&#x60; - The minimum value restriction is violated.   * &#x60;minimumValue&#x60; - The minimum value (integer or double). * &#x60;GENERAL_MAXIMUM_VALUE_VIOLATED&#x60; - The maximum value restriction is violated.   * &#x60;maximumValue&#x60; - The maximum value (integer or double). * &#x60;GENERAL_DUPLICATE_PARAMETER&#x60; - A parameter is duplicated. * &#x60;ROUTEOPTIMIZATION_LOCATION_CANNOT_BE_MATCHED&#x60; - The location cannot be matched to a street and no airline distance fallback is possible. * &#x60;ROUTEOPTIMIZATION_TOO_MANY_PROFILES&#x60; - The request contains too many different vehicle routing profiles. * &#x60;ROUTEOPTIMIZATION_DEPOTS_INVALID&#x60; - If PickupDeliveryOrders are specified, no Depots are allowed. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_LOCATIONS&#x60; - The list of locations does not contain the location with ID &#39;&#39;.   * &#x60;locationId&#x60; - the missing location id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_VEHICLES&#x60; - The list of vehicles does not contain the vehicle with ID &#39;&#39;.   * &#x60;vehicleId&#x60; - The missing vehicle id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_ORDERS&#x60; - The list of orders does not contain the order with ID &#39;&#39;.   * &#x60;orderId&#x60; - The missing order id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_TIMESLOTS&#x60; - The list of time slots of the corresponding location does not contain the time slot with ID &#39;&#39;.   * &#x60;timeSlotId&#x60; - The missing time slot id. * &#x60;ROUTEOPTIMIZATION_DEPOTS_INVALID&#x60; - If PickupDeliveryOrders are specified, no Depots are allowed. *&#x60;ROUTEOPTIMIZATION_DEPOT_MISSING_FOR_PICKUPS_OR_DELIVERIES&#x60; - At least one depot has to be specified for pickup or delivery orders. *&#x60;ROUTEOPTIMIZATION_EMPTY_ORDERS&#x60; - Empty orders without any pickups, deliveries and pickup-deliveries are not allowed. *&#x60;ROUTEOPTIMIZATION_INVALID_ORDERS_COMPOSITION&#x60; - When pickup-deliveries are given, pickups and/or deliveries are not allowed, and vice-versa. *&#x60;ROUTEOPTIMIZATION_VEHICLE_NOT_VALID_FOR_BREAKS&#x60; - The start or end duration of the vehicle exceeds the maximum work time between breaks. *&#x60;ROUTEOPTIMIZATION_DEPOT_NOT_VALID_FOR_BREAKS&#x60; - The total preparation duration of the depot exceeds the maximum work time between breaks for a vehicle. *&#x60;ROUTEOPTIMIZATION_NO_DEPOT_FOR_VEHICLE&#x60; - Due to the provided constraints, the vehicle is not allowed to visit any depot. *&#x60;ROUTEOPTIMIZATION_PARAMETER_CONFLICT&#x60; - Two parameters are in conflict with each other.   * &#x60;conflictingParameter&#x60; - A path to the affected property of the request.   * &#x60;message&#x60; - A human readable message that describes the error.  **Error codes for** &#x60;ROUTEOPTIMIZATION_RESTRICTION_EXCEEDED&#x60; * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_OPTIMIZATIONS_EXCEEDED&#x60; - The maximum number of concurrent optimizations is exceeded.   * &#x60;limit&#x60; - The limit (integer).  * &#x60;runningOptimizationIds&#x60; - Currently running optimization ids (String). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_LOCATIONS_EXCEEDED&#x60; - The request contains too many locations.   * &#x60;locations&#x60; - The number of locations (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_ORDERS_EXCEEDED&#x60; - The request contains too many orders.   * &#x60;orders&#x60; - The number of orders (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_VEHICLES_EXCEEDED&#x60; - The request contains too many vehicles.   * &#x60;vehicles&#x60; - The number of vehicles (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_DURATION_EXCEEDS_LIMIT&#x60; - The duration of the request is too long.   * &#x60;duration&#x60; - The duration of the request [s] (integer).   * &#x60;limit&#x60; - The limit (integer).  **Error codes for** &#x60;ROUTEOPTIMIZATION_RESTRICTION_EXCEEDED&#x60; * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_OPTIMIZATIONS_EXCEEDED&#x60; - The maximum number of concurrent optimizations is exceeded.  **Error codes for** &#x60;GENERAL_RESOURCE_NOT_FOUND&#x60; * &#x60;GENERAL_INVALID_ID&#x60; - The ID does not exist.   * &#x60;value&#x60; - The invalid ID.  **Error codes for** &#x60;ROUTEOPTIMIZATION_CONTENT_TOO_LARGE&#x60; * &#x60;ROUTEOPTIMIZATION_DECOMPRESSED_SIZE_EXCEEDED&#x60; - The decompressed size of the body exceeds the limit.   * &#x60;limit&#x60; - The decompressed body size limit [bytes]. (required).</param>
        /// <param name="varParameter">The name of the affected query or path parameter or a JSONPath to the affected property of the request..</param>
        /// <param name="details">Additional properties specific to this error class..</param>
        public RouteOptimizationCausingError(string description = default(string), string errorCode = default(string), string varParameter = default(string), Dictionary<string, Object> details = default(Dictionary<string, Object>))
        {
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new ArgumentNullException("description is a required property for RouteOptimizationCausingError and cannot be null");
            }
            this.Description = description;
            // to ensure "errorCode" is required (not null)
            if (errorCode == null)
            {
                throw new ArgumentNullException("errorCode is a required property for RouteOptimizationCausingError and cannot be null");
            }
            this.ErrorCode = errorCode;
            this.Parameter = varParameter;
            this.Details = details;
        }

        /// <summary>
        /// A human readable message that describes the error.
        /// </summary>
        /// <value>A human readable message that describes the error.</value>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// A constant string that can be used to identify this error class programmatically. An errorCode can have **details** to provide information in additional properties which are described with the code they apply to. They are of type string unless otherwise specified. Note that additional errorCodes as well as the **details** of existing errorCodes may be added at any time. Furthermore, the **description** may change at any time.  **Error codes for** &#x60;GENERAL_VALIDATION_ERROR&#x60; * &#x60;GENERAL_INVALID_VALUE&#x60; - A parameter is set to an invalid value.   * &#x60;value&#x60; - The invalid value. * &#x60;GENERAL_UNRECOGNIZED_PARAMETER&#x60; - A parameter is unknown. * &#x60;GENERAL_MISSING_PARAMETER&#x60; - A required parameter is missing. * &#x60;GENERAL_PATTERN_VIOLATED&#x60; - The value of a parameter does not match its pattern. * &#x60;GENERAL_INVALID_INTERVAL&#x60; - A time interval is invalid, i.e. start is greater than end. * &#x60;GENERAL_MINIMUM_LENGTH_VIOLATED&#x60; - The minimum length is violated.   * &#x60;minimumLength&#x60; - The minimum length (integer). * &#x60;GENERAL_MAXIMUM_LENGTH_VIOLATED&#x60; - The maximum length is violated.   * &#x60;maximumLength&#x60; - The maximum length (integer). * &#x60;GENERAL_DUPLICATE_ID&#x60; - Two or more objects of the same type have the same ID.   * &#x60;value&#x60; - The duplicated value.   * &#x60;indexes&#x60; - The list indexes of the objects with the same ID. * &#x60;GENERAL_MINIMUM_VALUE_VIOLATED&#x60; - The minimum value restriction is violated.   * &#x60;minimumValue&#x60; - The minimum value (integer or double). * &#x60;GENERAL_MAXIMUM_VALUE_VIOLATED&#x60; - The maximum value restriction is violated.   * &#x60;maximumValue&#x60; - The maximum value (integer or double). * &#x60;GENERAL_DUPLICATE_PARAMETER&#x60; - A parameter is duplicated. * &#x60;ROUTEOPTIMIZATION_LOCATION_CANNOT_BE_MATCHED&#x60; - The location cannot be matched to a street and no airline distance fallback is possible. * &#x60;ROUTEOPTIMIZATION_TOO_MANY_PROFILES&#x60; - The request contains too many different vehicle routing profiles. * &#x60;ROUTEOPTIMIZATION_DEPOTS_INVALID&#x60; - If PickupDeliveryOrders are specified, no Depots are allowed. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_LOCATIONS&#x60; - The list of locations does not contain the location with ID &#39;&#39;.   * &#x60;locationId&#x60; - the missing location id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_VEHICLES&#x60; - The list of vehicles does not contain the vehicle with ID &#39;&#39;.   * &#x60;vehicleId&#x60; - The missing vehicle id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_ORDERS&#x60; - The list of orders does not contain the order with ID &#39;&#39;.   * &#x60;orderId&#x60; - The missing order id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_TIMESLOTS&#x60; - The list of time slots of the corresponding location does not contain the time slot with ID &#39;&#39;.   * &#x60;timeSlotId&#x60; - The missing time slot id. * &#x60;ROUTEOPTIMIZATION_DEPOTS_INVALID&#x60; - If PickupDeliveryOrders are specified, no Depots are allowed. *&#x60;ROUTEOPTIMIZATION_DEPOT_MISSING_FOR_PICKUPS_OR_DELIVERIES&#x60; - At least one depot has to be specified for pickup or delivery orders. *&#x60;ROUTEOPTIMIZATION_EMPTY_ORDERS&#x60; - Empty orders without any pickups, deliveries and pickup-deliveries are not allowed. *&#x60;ROUTEOPTIMIZATION_INVALID_ORDERS_COMPOSITION&#x60; - When pickup-deliveries are given, pickups and/or deliveries are not allowed, and vice-versa. *&#x60;ROUTEOPTIMIZATION_VEHICLE_NOT_VALID_FOR_BREAKS&#x60; - The start or end duration of the vehicle exceeds the maximum work time between breaks. *&#x60;ROUTEOPTIMIZATION_DEPOT_NOT_VALID_FOR_BREAKS&#x60; - The total preparation duration of the depot exceeds the maximum work time between breaks for a vehicle. *&#x60;ROUTEOPTIMIZATION_NO_DEPOT_FOR_VEHICLE&#x60; - Due to the provided constraints, the vehicle is not allowed to visit any depot. *&#x60;ROUTEOPTIMIZATION_PARAMETER_CONFLICT&#x60; - Two parameters are in conflict with each other.   * &#x60;conflictingParameter&#x60; - A path to the affected property of the request.   * &#x60;message&#x60; - A human readable message that describes the error.  **Error codes for** &#x60;ROUTEOPTIMIZATION_RESTRICTION_EXCEEDED&#x60; * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_OPTIMIZATIONS_EXCEEDED&#x60; - The maximum number of concurrent optimizations is exceeded.   * &#x60;limit&#x60; - The limit (integer).  * &#x60;runningOptimizationIds&#x60; - Currently running optimization ids (String). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_LOCATIONS_EXCEEDED&#x60; - The request contains too many locations.   * &#x60;locations&#x60; - The number of locations (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_ORDERS_EXCEEDED&#x60; - The request contains too many orders.   * &#x60;orders&#x60; - The number of orders (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_VEHICLES_EXCEEDED&#x60; - The request contains too many vehicles.   * &#x60;vehicles&#x60; - The number of vehicles (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_DURATION_EXCEEDS_LIMIT&#x60; - The duration of the request is too long.   * &#x60;duration&#x60; - The duration of the request [s] (integer).   * &#x60;limit&#x60; - The limit (integer).  **Error codes for** &#x60;ROUTEOPTIMIZATION_RESTRICTION_EXCEEDED&#x60; * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_OPTIMIZATIONS_EXCEEDED&#x60; - The maximum number of concurrent optimizations is exceeded.  **Error codes for** &#x60;GENERAL_RESOURCE_NOT_FOUND&#x60; * &#x60;GENERAL_INVALID_ID&#x60; - The ID does not exist.   * &#x60;value&#x60; - The invalid ID.  **Error codes for** &#x60;ROUTEOPTIMIZATION_CONTENT_TOO_LARGE&#x60; * &#x60;ROUTEOPTIMIZATION_DECOMPRESSED_SIZE_EXCEEDED&#x60; - The decompressed size of the body exceeds the limit.   * &#x60;limit&#x60; - The decompressed body size limit [bytes].
        /// </summary>
        /// <value>A constant string that can be used to identify this error class programmatically. An errorCode can have **details** to provide information in additional properties which are described with the code they apply to. They are of type string unless otherwise specified. Note that additional errorCodes as well as the **details** of existing errorCodes may be added at any time. Furthermore, the **description** may change at any time.  **Error codes for** &#x60;GENERAL_VALIDATION_ERROR&#x60; * &#x60;GENERAL_INVALID_VALUE&#x60; - A parameter is set to an invalid value.   * &#x60;value&#x60; - The invalid value. * &#x60;GENERAL_UNRECOGNIZED_PARAMETER&#x60; - A parameter is unknown. * &#x60;GENERAL_MISSING_PARAMETER&#x60; - A required parameter is missing. * &#x60;GENERAL_PATTERN_VIOLATED&#x60; - The value of a parameter does not match its pattern. * &#x60;GENERAL_INVALID_INTERVAL&#x60; - A time interval is invalid, i.e. start is greater than end. * &#x60;GENERAL_MINIMUM_LENGTH_VIOLATED&#x60; - The minimum length is violated.   * &#x60;minimumLength&#x60; - The minimum length (integer). * &#x60;GENERAL_MAXIMUM_LENGTH_VIOLATED&#x60; - The maximum length is violated.   * &#x60;maximumLength&#x60; - The maximum length (integer). * &#x60;GENERAL_DUPLICATE_ID&#x60; - Two or more objects of the same type have the same ID.   * &#x60;value&#x60; - The duplicated value.   * &#x60;indexes&#x60; - The list indexes of the objects with the same ID. * &#x60;GENERAL_MINIMUM_VALUE_VIOLATED&#x60; - The minimum value restriction is violated.   * &#x60;minimumValue&#x60; - The minimum value (integer or double). * &#x60;GENERAL_MAXIMUM_VALUE_VIOLATED&#x60; - The maximum value restriction is violated.   * &#x60;maximumValue&#x60; - The maximum value (integer or double). * &#x60;GENERAL_DUPLICATE_PARAMETER&#x60; - A parameter is duplicated. * &#x60;ROUTEOPTIMIZATION_LOCATION_CANNOT_BE_MATCHED&#x60; - The location cannot be matched to a street and no airline distance fallback is possible. * &#x60;ROUTEOPTIMIZATION_TOO_MANY_PROFILES&#x60; - The request contains too many different vehicle routing profiles. * &#x60;ROUTEOPTIMIZATION_DEPOTS_INVALID&#x60; - If PickupDeliveryOrders are specified, no Depots are allowed. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_LOCATIONS&#x60; - The list of locations does not contain the location with ID &#39;&#39;.   * &#x60;locationId&#x60; - the missing location id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_VEHICLES&#x60; - The list of vehicles does not contain the vehicle with ID &#39;&#39;.   * &#x60;vehicleId&#x60; - The missing vehicle id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_ORDERS&#x60; - The list of orders does not contain the order with ID &#39;&#39;.   * &#x60;orderId&#x60; - The missing order id. * &#x60;ROUTEOPTIMIZATION_ID_MISSING_IN_TIMESLOTS&#x60; - The list of time slots of the corresponding location does not contain the time slot with ID &#39;&#39;.   * &#x60;timeSlotId&#x60; - The missing time slot id. * &#x60;ROUTEOPTIMIZATION_DEPOTS_INVALID&#x60; - If PickupDeliveryOrders are specified, no Depots are allowed. *&#x60;ROUTEOPTIMIZATION_DEPOT_MISSING_FOR_PICKUPS_OR_DELIVERIES&#x60; - At least one depot has to be specified for pickup or delivery orders. *&#x60;ROUTEOPTIMIZATION_EMPTY_ORDERS&#x60; - Empty orders without any pickups, deliveries and pickup-deliveries are not allowed. *&#x60;ROUTEOPTIMIZATION_INVALID_ORDERS_COMPOSITION&#x60; - When pickup-deliveries are given, pickups and/or deliveries are not allowed, and vice-versa. *&#x60;ROUTEOPTIMIZATION_VEHICLE_NOT_VALID_FOR_BREAKS&#x60; - The start or end duration of the vehicle exceeds the maximum work time between breaks. *&#x60;ROUTEOPTIMIZATION_DEPOT_NOT_VALID_FOR_BREAKS&#x60; - The total preparation duration of the depot exceeds the maximum work time between breaks for a vehicle. *&#x60;ROUTEOPTIMIZATION_NO_DEPOT_FOR_VEHICLE&#x60; - Due to the provided constraints, the vehicle is not allowed to visit any depot. *&#x60;ROUTEOPTIMIZATION_PARAMETER_CONFLICT&#x60; - Two parameters are in conflict with each other.   * &#x60;conflictingParameter&#x60; - A path to the affected property of the request.   * &#x60;message&#x60; - A human readable message that describes the error.  **Error codes for** &#x60;ROUTEOPTIMIZATION_RESTRICTION_EXCEEDED&#x60; * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_OPTIMIZATIONS_EXCEEDED&#x60; - The maximum number of concurrent optimizations is exceeded.   * &#x60;limit&#x60; - The limit (integer).  * &#x60;runningOptimizationIds&#x60; - Currently running optimization ids (String). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_LOCATIONS_EXCEEDED&#x60; - The request contains too many locations.   * &#x60;locations&#x60; - The number of locations (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_ORDERS_EXCEEDED&#x60; - The request contains too many orders.   * &#x60;orders&#x60; - The number of orders (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_VEHICLES_EXCEEDED&#x60; - The request contains too many vehicles.   * &#x60;vehicles&#x60; - The number of vehicles (integer).   * &#x60;limit&#x60; - The limit (integer). * &#x60;ROUTEOPTIMIZATION_DURATION_EXCEEDS_LIMIT&#x60; - The duration of the request is too long.   * &#x60;duration&#x60; - The duration of the request [s] (integer).   * &#x60;limit&#x60; - The limit (integer).  **Error codes for** &#x60;ROUTEOPTIMIZATION_RESTRICTION_EXCEEDED&#x60; * &#x60;ROUTEOPTIMIZATION_NUMBER_OF_OPTIMIZATIONS_EXCEEDED&#x60; - The maximum number of concurrent optimizations is exceeded.  **Error codes for** &#x60;GENERAL_RESOURCE_NOT_FOUND&#x60; * &#x60;GENERAL_INVALID_ID&#x60; - The ID does not exist.   * &#x60;value&#x60; - The invalid ID.  **Error codes for** &#x60;ROUTEOPTIMIZATION_CONTENT_TOO_LARGE&#x60; * &#x60;ROUTEOPTIMIZATION_DECOMPRESSED_SIZE_EXCEEDED&#x60; - The decompressed size of the body exceeds the limit.   * &#x60;limit&#x60; - The decompressed body size limit [bytes].</value>
        [DataMember(Name = "errorCode", IsRequired = true, EmitDefaultValue = true)]
        public string ErrorCode { get; set; }

        /// <summary>
        /// The name of the affected query or path parameter or a JSONPath to the affected property of the request.
        /// </summary>
        /// <value>The name of the affected query or path parameter or a JSONPath to the affected property of the request.</value>
        [DataMember(Name = "parameter", EmitDefaultValue = true)]
        public string Parameter { get; set; }

        /// <summary>
        /// Additional properties specific to this error class.
        /// </summary>
        /// <value>Additional properties specific to this error class.</value>
        [DataMember(Name = "details", EmitDefaultValue = false)]
        public Dictionary<string, Object> Details { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RouteOptimizationCausingError {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ErrorCode: ").Append(ErrorCode).Append("\n");
            sb.Append("  Parameter: ").Append(Parameter).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
